name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create build directory
        run: mkdir -p _site

      - name: Copy frontend files
        run: |
          cp -r frontend/* _site/
          
      - name: Create demo data directory
        run: mkdir -p _site/data

      - name: Copy sample data files
        run: |
          if [ -d "Data" ]; then
            cp Data/*.csv _site/data/ 2>/dev/null || true
          fi

      - name: Create backend simulation
        run: |
          cat > _site/mock-backend.js << 'EOF'
          // Mock backend for demo purposes
          class MockBackend {
            constructor() {
              this.isDemo = true;
            }

            async analyzeFiles(files) {
              // Return mock analysis data for demo
              return {
                kpis: {
                  total_tips: 1250,
                  unique_tipsters: 15,
                  unique_races: 89,
                  unique_tracks: 12,
                  avg_field_size: 8.7,
                  total_prize_money: 2450000
                },
                tipster_analysis: {
                  roi_summary: [
                    {
                      "Tipster": "Expert Tips",
                      "Total Tips": 156,
                      "Winners": 45,
                      "Strike Rate": 28.85,
                      "Total Invested": 1560,
                      "Total Return": 1820.50,
                      "Profit/Loss": 260.50,
                      "ROI %": 16.70
                    },
                    {
                      "Tipster": "Racing Pro",
                      "Total Tips": 203,
                      "Winners": 52,
                      "Strike Rate": 25.62,
                      "Total Invested": 2030,
                      "Total Return": 2187.30,
                      "Profit/Loss": 157.30,
                      "ROI %": 7.75
                    },
                    {
                      "Tipster": "Track Master",
                      "Total Tips": 189,
                      "Winners": 41,
                      "Strike Rate": 21.69,
                      "Total Invested": 1890,
                      "Total Return": 1756.80,
                      "Profit/Loss": -133.20,
                      "ROI %": -7.05
                    }
                  ]
                },
                market_analysis: {
                  movement_categories: {
                    "Shortened": 342,
                    "Drifted": 298,
                    "Stable": 610
                  },
                  tipster_movements: [
                    { "Tip Website": "Expert Tips", "mean": -2.3 },
                    { "Tip Website": "Racing Pro", "mean": 1.8 },
                    { "Tip Website": "Track Master", "mean": 0.5 }
                  ],
                  volume_by_tipster: {
                    labels: ["Expert Tips", "Racing Pro", "Track Master"],
                    data: [45000, 38000, 29000]
                  }
                },
                factor_analysis: {
                  top_jockeys: {
                    labels: ["J. McDonald", "H. Bowman", "T. Berry", "K. McEvoy", "R. King"],
                    data: [45, 38, 32, 29, 25]
                  },
                  barrier_analysis: [
                    { "Barrier": 1, "Horse Name": 89, "win_lose": 23 },
                    { "Barrier": 2, "Horse Name": 95, "win_lose": 21 },
                    { "Barrier": 3, "Horse Name": 87, "win_lose": 19 },
                    { "Barrier": 4, "Horse Name": 78, "win_lose": 15 }
                  ],
                  distance_distribution: {
                    labels: ["1000-1400m", "1401-1800m", "1801-2200m", "2200m+"],
                    data: [315, 485, 298, 152]
                  },
                  odds_distribution: {
                    labels: ["1.01-3.00", "3.01-6.00", "6.01-10.00", "10.01-20.00", "20.00+"],
                    data: [189, 234, 298, 312, 217]
                  }
                },
                track_analysis: [
                  { "Track": "Randwick", "Total Tips": 156, "Winners": 45, "Strike Rate": 28.85 },
                  { "Track": "Flemington", "Total Tips": 134, "Winners": 34, "Strike Rate": 25.37 },
                  { "Track": "Caulfield", "Total Tips": 98, "Winners": 22, "Strike Rate": 22.45 }
                ],
                position_analysis: [
                  { "Position": "1st", "Strike Rate": 28.5, "Avg Win Odds": 4.2 },
                  { "Position": "2nd", "Strike Rate": 19.8, "Avg Win Odds": 5.8 },
                  { "Position": "3rd", "Strike Rate": 15.2, "Avg Win Odds": 7.1 },
                  { "Position": "4th+", "Strike Rate": 8.9, "Avg Win Odds": 12.3 }
                ],
                time_analysis: {
                  hourly: [
                    { "Hour": 10, "Total Tips": 45, "Winners": 12 },
                    { "Hour": 11, "Total Tips": 78, "Winners": 19 },
                    { "Hour": 12, "Total Tips": 156, "Winners": 42 },
                    { "Hour": 13, "Total Tips": 189, "Winners": 48 },
                    { "Hour": 14, "Total Tips": 234, "Winners": 67 },
                    { "Hour": 15, "Total Tips": 198, "Winners": 45 },
                    { "Hour": 16, "Total Tips": 134, "Winners": 28 }
                  ]
                },
                raw_data: {
                  recent_tips: [
                    {
                      "Tip Website": "Expert Tips",
                      "Track": "Randwick",
                      "Race": "Race 3",
                      "Selection Position": "1st",
                      "Horse Name": "Thunder Bolt",
                      "JockeyName": "J. McDonald",
                      "Barrier": 4,
                      "BestOdds": 3.50,
                      "bsp": 3.80,
                      "win_lose": 1
                    },
                    {
                      "Tip Website": "Racing Pro",
                      "Track": "Flemington",
                      "Race": "Race 7",
                      "Selection Position": "2nd",
                      "Horse Name": "Speed Demon",
                      "JockeyName": "H. Bowman",
                      "Barrier": 2,
                      "BestOdds": 5.50,
                      "bsp": 6.20,
                      "win_lose": 0
                    }
                  ]
                }
              };
            }
          }

          window.MockBackend = MockBackend;
          EOF

      - name: Update frontend for demo mode
        run: |
          # Fix CSS truncation issue in index.html
          cat > _site/complete-styles.css << 'EOF'
          .tab {
              padding: 1rem 1.5rem;
              background: none;
              border: none;
              color: var(--text-secondary);
              cursor: pointer;
              transition: all 0.3s ease;
              border-bottom: 3px solid transparent;
              font-weight: 500;
          }

          .tab:hover {
              color: var(--primary-color);
              background: rgba(52, 152, 219, 0.05);
          }

          .tab.active {
              color: var(--secondary-color);
              border-bottom-color: var(--secondary-color);
              background: rgba(52, 152, 219, 0.1);
          }

          .tab-content {
              display: none;
              animation: fadeIn 0.3s ease;
          }

          .tab-content.active {
              display: block;
          }

          /* Loading Spinner */
          .spinner-overlay {
              position: fixed;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              background: rgba(255, 255, 255, 0.9);
              display: flex;
              justify-content: center;
              align-items: center;
              z-index: 9999;
          }

          .spinner {
              width: 50px;
              height: 50px;
              border: 5px solid var(--light-bg);
              border-top: 5px solid var(--secondary-color);
              border-radius: 50%;
              animation: spin 1s linear infinite;
          }

          @keyframes spin {
              0% { transform: rotate(0deg); }
              100% { transform: rotate(360deg); }
          }

          @keyframes fadeIn {
              from { opacity: 0; transform: translateY(10px); }
              to { opacity: 1; transform: translateY(0); }
          }

          /* Stats Cards */
          .stats-grid {
              display: grid;
              grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
              gap: 1.5rem;
              margin-bottom: 2rem;
          }

          .stat-card {
              background: var(--card-bg);
              padding: 1.5rem;
              border-radius: 12px;
              box-shadow: 0 4px 6px rgba(0,0,0,0.1);
              text-align: center;
              transition: transform 0.3s ease;
          }

          .stat-card:hover {
              transform: translateY(-5px);
          }

          .stat-card-header {
              display: flex;
              justify-content: space-between;
              align-items: center;
              margin-bottom: 1rem;
          }

          .stat-card-title {
              font-size: 0.9rem;
              color: var(--text-secondary);
              text-transform: uppercase;
              letter-spacing: 1px;
          }

          .stat-card-value {
              font-size: 2.5rem;
              font-weight: 700;
              color: var(--secondary-color);
              margin: 0.5rem 0;
          }

          .stat-card-subtitle {
              color: var(--text-secondary);
              font-size: 0.9rem;
          }

          /* Utility Classes */
          .hidden {
              display: none !important;
          }

          .text-success {
              color: var(--success-color) !important;
          }

          .text-danger {
              color: var(--danger-color) !important;
          }

          .text-warning {
              color: var(--warning-color) !important;
          }

          .text-secondary {
              color: var(--text-secondary) !important;
          }

          .mt-2 { margin-top: 2rem; }
          .mb-2 { margin-bottom: 2rem; }

          /* Responsive */
          @media (max-width: 768px) {
              .header-content h1 {
                  font-size: 2rem;
              }

              .kpi-grid {
                  grid-template-columns: repeat(2, 1fr);
              }

              .charts-grid {
                  grid-template-columns: 1fr;
              }

              .tabs {
                  flex-wrap: wrap;
              }

              .tab {
                  flex: 1;
                  min-width: 120px;
              }

              .analysis-section {
                  padding: 1rem;
              }
          }

          /* Custom scrollbar */
          ::-webkit-scrollbar {
              width: 8px;
          }

          ::-webkit-scrollbar-track {
              background: var(--light-bg);
          }

          ::-webkit-scrollbar-thumb {
              background: var(--border-color);
              border-radius: 4px;
          }

          ::-webkit-scrollbar-thumb:hover {
              background: var(--text-secondary);
          }
          EOF

          # Add the complete CSS to the HTML file
          sed -i '/<\/style>/i @import url("complete-styles.css");' _site/index.html

          # Update script.js to use mock backend in demo mode
          cat > _site/script-demo.js << 'EOF'
          // Demo version of script.js with mock backend
          let uploadedFiles = [];
          let chartInstances = {};
          let tableInstances = {};
          let mockBackend = new MockBackend();

          // Chart.js defaults
          Chart.defaults.font.family = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif';
          Chart.defaults.color = '#2c3e50';

          document.addEventListener('DOMContentLoaded', () => {
              initializeUploadArea();
              initializeTabs();
              showDemoNotification();
          });

          function showDemoNotification() {
              const notification = document.createElement('div');
              notification.style.cssText = \`
                  position: fixed;
                  top: 20px;
                  right: 20px;
                  background: #f39c12;
                  color: white;
                  padding: 15px 20px;
                  border-radius: 8px;
                  z-index: 9999;
                  font-weight: bold;
                  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
              \`;
              notification.innerHTML = '🎯 DEMO MODE: Showing sample data';
              document.body.appendChild(notification);
              setTimeout(() => notification.remove(), 5000);
          }

          function initializeUploadArea() {
              const uploadArea = document.getElementById('upload-area');
              const fileInput = document.getElementById('file-input');
              const analyzeBtn = document.getElementById('analyze-btn');

              if (uploadArea) uploadArea.addEventListener('click', () => fileInput && fileInput.click());
              if (analyzeBtn) analyzeBtn.addEventListener('click', analyzeData);
              
              // Enable the button in demo mode
              if (analyzeBtn) analyzeBtn.disabled = false;
          }

          function initializeTabs() {
              const tabs = document.querySelectorAll('.tab');
              const tabContents = document.querySelectorAll('.tab-content');

              tabs.forEach(tab => {
                  tab.addEventListener('click', () => {
                      const targetTab = tab.getAttribute('data-tab');

                      tabs.forEach(t => t.classList.remove('active'));
                      tabContents.forEach(tc => tc.classList.remove('active'));

                      tab.classList.add('active');
                      const target = document.getElementById(targetTab);
                      if (target) target.classList.add('active');
                  });
              });
          }

          async function analyzeData() {
              const spinner = document.getElementById('loading-spinner');
              const dashboard = document.getElementById('dashboard');

              if (spinner) spinner.classList.remove('hidden');

              try {
                  await new Promise(resolve => setTimeout(resolve, 1500));
                  
                  const data = await mockBackend.analyzeFiles([]);
                  populateDashboard(data);
                  if (dashboard) dashboard.classList.remove('hidden');

              } catch (error) {
                  console.error('Analysis error:', error);
                  alert(\`Analysis failed: \${error.message}\`);
              } finally {
                  if (spinner) spinner.classList.add('hidden');
              }
          }
          EOF

          # Append the rest of the original script functions
          tail -n +150 frontend/script.js >> _site/script-demo.js

      - name: Update HTML for demo mode
        run: |
          sed -i 's/src="script.js"/src="script-demo.js"/' _site/index.html
          sed -i '/<script src="script-demo.js"><\/script>/i <script src="mock-backend.js"></script>' _site/index.html

      - name: Add demo banner to HTML
        run: |
          sed -i '/<\/header>/i \
          <div style="background: linear-gradient(45deg, #f39c12, #e67e22); color: white; text-align: center; padding: 10px; margin-bottom: 20px; border-radius: 8px; font-weight: bold;">\
              📊 DEMO VERSION - Sample data is displayed for demonstration purposes\
          </div>' _site/index.html

      - name: Create 404 page
        run: |
          cp _site/index.html _site/404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
